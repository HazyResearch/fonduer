name: Continuous Integration

on: [push, pull_request]

jobs:
  ubuntu-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7]
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies for Ubuntu
      run: |
        sudo apt-get install neofetch
        sudo apt-get install -q -y libmecab-dev swig mecab
        # In Ubuntu 18.04, unidic-mecab is too old, so we install it manually. Note
        # that this automatically sets the dictionary to unidic.
        # Binary dictionary not included in 2.2.0-1 (https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=788822)
        wget http://launchpadlibrarian.net/326401889/unidic-mecab_2.1.2~dfsg-7_all.deb
        sudo dpkg -i unidic-mecab_2.1.2~dfsg-7_all.deb
        # Install ImageMagick library for Wand
        sudo apt-get install libmagickwand-dev ghostscript
        # Remove the policy file to allow the visualizer test to open the PDF.
        # See: https://github.com/HazyResearch/fonduer/issues/170
        sudo rm -rf /etc/ImageMagick-6/policy.xml
        sudo apt-get install -q -y poppler-utils
        pip install --upgrade pip
        # Install PyTorch for Linux with no CUDA support
        pip install torch==1.4.0+cpu torchvision==0.5.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
    - name: Print Version Info
      run: |
        neofetch
        pdfinfo -v
        psql --version
        python --version
        pip --version
        mecab -D || true
    - name: Install Fonduer
      run: |
        make dev_extra
        pip install -q coveralls
    - name: Run preliminary checks
      run: |
        make check
        make docs
    - name: Set up test databases and test data
      run: |
        createdb e2e_test -p 5432 -h 127.0.0.1 -w -U postgres
        createdb inc_test -p 5432 -h 127.0.0.1 -w -U postgres
        createdb meta_test -p 5432 -h 127.0.0.1 -w -U postgres
        createdb pg_test -p 5432 -h 127.0.0.1 -w -U postgres
        cd tests && ./download_data.sh && cd ..
        python -m spacy download en
      env:
        PGPASSWORD: postgres
    - name: Test with pytest
      run: |
        coverage run -m pytest tests
      env:
        CI: true
        PGPASSWORD: postgres
        PGUSER: postgres
        POSTGRES_PORT: 5432
        # Use 127.0.0.1 instead of localhost (#351)
        POSTGRES_HOST: 127.0.0.1
    - name: Upload to coveralls.io
      run: |
          coverage combine
          coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.coveralls_repo_token }}
  macos-test:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6.10, 3.7.7]
    steps:
    - uses: actions/checkout@v2
    # actions/setup-python@v1 cannot be used on macos (see #386)
    - name: Install python version ${{ matrix.python-version }}
      uses: gabrielfalcao/pyenv-action@v5
      with:
        default: "${{ matrix.python-version }}"
        command: |
          pip install -U pip  # upgrade pip after installing python
          echo "::add-path::`pyenv root`/shims"
    - name: Install dependencies for macOS
      run: |
        brew update
        brew install swig mecab mecab-unidic
        # Use unidic-mecab dictionary
        sed -i -e "s/ipadic/unidic/" /usr/local/etc/mecabrc

        # Install ImageMagick for Wand.
        brew install freetype imagemagick ghostscript

        brew install poppler

        brew install neofetch
        # - name: Install postgres for macOS
        #   run: |
        # Install PostgreSQL 10 (12 not compatible with Fonduer)
        # See https://github.com/HazyResearch/fonduer/issues/371
        brew install postgresql@10
        export PATH="/usr/local/opt/postgresql@10/bin:$PATH"
        echo "::add-path::/usr/local/opt/postgresql@10/bin"

        # https://github.com/brianmario/mysql2/issues/795
        echo "::set-env name=LIBRARY_PATH::$LIBRARY_PATH:/usr/local/opt/openssl@1.1/lib/"

        # Start postgresql for osx
        rm -rf /usr/local/var/postgresql@10
        initdb /usr/local/var/postgresql@10
        pg_ctl -D /usr/local/var/postgresql@10 start; sleep 5
        createuser -s postgres
    - name: Set up test databases and test data
      run: |
        createdb e2e_test -p 5432 -h 127.0.0.1 -w -U postgres
        createdb inc_test -p 5432 -h 127.0.0.1 -w -U postgres
        createdb meta_test -p 5432 -h 127.0.0.1 -w -U postgres
        createdb pg_test -p 5432 -h 127.0.0.1 -w -U postgres
        cd tests && ./download_data.sh && cd ..
    - name: Print Version Info
      run: |
        pdfinfo -v
        psql --version
        python --version
        pip --version
        mecab -D || true
        neofetch
    - name: Install Fonduer
      run: |
        make dev_extra
        pip install coveralls
    - name: Run preliminary checks
      run: |
        make check
        make docs
      env:
        PGPASSWORD: postgres
    - name: Test with pytest
      run: |
        python -m spacy download en
        coverage run -m pytest tests
      env:
        CI: true
        PGPASSWORD: postgres
        PGUSER: postgres
        POSTGRES_PORT: 5432
        # Use 127.0.0.1 instead of localhost (#351)
        POSTGRES_HOST: 127.0.0.1
        # https://stackoverflow.com/questions/53014306/error-15-initializing-
        # libiomp5-dylib-but-found-libiomp5-dylib-already-initial
        KMP_DUPLICATE_LIB_OK: true
    - name: Upload to coveralls.io
      run: |
          coverage combine
          coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.coveralls_repo_token }}
  build-and-publish:
    name: Build and Publish Fonduer to PyPI
    runs-on: ubuntu-latest
    needs: [ubuntu-test, macos-test]
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build Fonduer
      run: |
        pip install -U setuptools wheel pip
        python setup.py sdist bdist_wheel
    - name: Publish distribution to Test PyPi
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
